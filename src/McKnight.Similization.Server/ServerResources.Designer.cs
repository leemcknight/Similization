//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace McKnight.Similization.Server {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ServerResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ServerResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("McKnight.Similization.Server.ServerResources", typeof(ServerResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding Villages....
        /// </summary>
        internal static string AddingVillages {
            get {
                return ResourceManager.GetString("AddingVillages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find a suitable terrain for a {0} GridCell with an altitude of {1} and a temperature of {2}..
        /// </summary>
        internal static string CannotAssignTerrain {
            get {
                return ResourceManager.GetString("CannotAssignTerrain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This city cannot be made the capital because it does not belong to the host country..
        /// </summary>
        internal static string CapitialNotInCountry {
            get {
                return ResourceManager.GetString("CapitialNotInCountry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The GridCell specified does not contain a city..
        /// </summary>
        internal static string CellDoesNotContainCity {
            get {
                return ResourceManager.GetString("CellDoesNotContainCity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Railroad cannot be placed on this cell because it does not have a road..
        /// </summary>
        internal static string CellDoesNotHaveRoad {
            get {
                return ResourceManager.GetString("CellDoesNotHaveRoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This cell already has a Railroad..
        /// </summary>
        internal static string CellHasRailroad {
            get {
                return ResourceManager.GetString("CellHasRailroad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The city does not contain the specified improvement..
        /// </summary>
        internal static string CityDoesNotHaveImprovement {
            get {
                return ResourceManager.GetString("CityDoesNotHaveImprovement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating Map....
        /// </summary>
        internal static string CreatingMap {
            get {
                return ResourceManager.GetString("CreatingMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An embassy is required before this operation can be performed..
        /// </summary>
        internal static string EmbassyRequired {
            get {
                return ResourceManager.GetString("EmbassyRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty Seed Array..
        /// </summary>
        internal static string EmptySeedArray {
            get {
                return ResourceManager.GetString("EmptySeedArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempted to add a fortress to a non-dry cell..
        /// </summary>
        internal static string FortessOnNonDryCell {
            get {
                return ResourceManager.GetString("FortessOnNonDryCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This goody has already been applied..
        /// </summary>
        internal static string GoodyAlreadyApplied {
            get {
                return ResourceManager.GetString("GoodyAlreadyApplied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is already a city on this GridCell..
        /// </summary>
        internal static string GridCellHasCity {
            get {
                return ResourceManager.GetString("GridCellHasCity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A river cannot be placed on this cell..
        /// </summary>
        internal static string InvalidCellForRiver {
            get {
                return ResourceManager.GetString("InvalidCellForRiver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This saved game file contains an invalid map size..
        /// </summary>
        internal static string InvalidMapSize {
            get {
                return ResourceManager.GetString("InvalidMapSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This saved xml document either has an empty Size node or the Size node appears after the Cells list.  The Size node must appear before the Cell List..
        /// </summary>
        internal static string InvalidSizeNode {
            get {
                return ResourceManager.GetString("InvalidSizeNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Type Name.
        /// </summary>
        internal static string InvalidTypeName {
            get {
                return ResourceManager.GetString("InvalidTypeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid WorldSize.
        /// </summary>
        internal static string InvalidWorldSize {
            get {
                return ResourceManager.GetString("InvalidWorldSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This cell cannot be irrigated because it contains water..
        /// </summary>
        internal static string IrrigatedCellHasWater {
            get {
                return ResourceManager.GetString("IrrigatedCellHasWater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This cell cannot be mined because it contains water..
        /// </summary>
        internal static string MinedCellHasWater {
            get {
                return ResourceManager.GetString("MinedCellHasWater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no diplomatic tie with this country..
        /// </summary>
        internal static string NoDiplomaticTie {
            get {
                return ResourceManager.GetString("NoDiplomaticTie", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no mutual protection pact with this country..
        /// </summary>
        internal static string NoMutualProtectionPact {
            get {
                return ResourceManager.GetString("NoMutualProtectionPact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Railroad cannot be placed on this cell because it contains water..
        /// </summary>
        internal static string RailroadCellHasWater {
            get {
                return ResourceManager.GetString("RailroadCellHasWater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This cell already has a Railroad..
        /// </summary>
        internal static string RoadCellHasRailroad {
            get {
                return ResourceManager.GetString("RoadCellHasRailroad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This cell already has a road..
        /// </summary>
        internal static string RoadCellHasRoad {
            get {
                return ResourceManager.GetString("RoadCellHasRoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A road cannot be placed on this cell because it contains water..
        /// </summary>
        internal static string RoadCellHasWater {
            get {
                return ResourceManager.GetString("RoadCellHasWater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This ruleset does not contain a primary government..
        /// </summary>
        internal static string RulesetDoesNotHavePrimaryGovernment {
            get {
                return ResourceManager.GetString("RulesetDoesNotHavePrimaryGovernment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The road bonus of this ruleset is invalid.  It must be a positive number..
        /// </summary>
        internal static string RulesetHasInvalidRoadBonus {
            get {
                return ResourceManager.GetString("RulesetHasInvalidRoadBonus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A spy is required for espionage missions..
        /// </summary>
        internal static string SpyRequired {
            get {
                return ResourceManager.GetString("SpyRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This unit cannot bombard targets..
        /// </summary>
        internal static string UnitCannotBombard {
            get {
                return ResourceManager.GetString("UnitCannotBombard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This unit cannot perform precision strikes..
        /// </summary>
        internal static string UnitCannotPrecisionStrike {
            get {
                return ResourceManager.GetString("UnitCannotPrecisionStrike", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown Combat result.
        /// </summary>
        internal static string UnknownCombatResult {
            get {
                return ResourceManager.GetString("UnknownCombatResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to determine seed size..
        /// </summary>
        internal static string UnknownSeedSize {
            get {
                return ResourceManager.GetString("UnknownSeedSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown Worker Efficiency..
        /// </summary>
        internal static string UnknownWorkerEfficiency {
            get {
                return ResourceManager.GetString("UnknownWorkerEfficiency", resourceCulture);
            }
        }
    }
}
