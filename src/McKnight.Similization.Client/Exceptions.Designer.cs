//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace McKnight.Similization.Client {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Exceptions {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Exceptions() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("McKnight.Similization.Client.Exceptions", typeof(Exceptions).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command is not enabled.  Set Enabled to true before calling Invoke() on this command..
        /// </summary>
        internal static string Command_Disabled {
            get {
                return ResourceManager.GetString("Command_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No active unit to bombard a target..
        /// </summary>
        internal static string error_bombardNoUnit {
            get {
                return ResourceManager.GetString("error_bombardNoUnit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid city size..
        /// </summary>
        internal static string error_invalidCitySize {
            get {
                return ResourceManager.GetString("error_invalidCitySize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid city tile name..
        /// </summary>
        internal static string error_invalidCityTileName {
            get {
                return ResourceManager.GetString("error_invalidCityTileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid civilization in the current ruleset..
        /// </summary>
        internal static string error_invalidCivilization {
            get {
                return ResourceManager.GetString("error_invalidCivilization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid Era in the current ruleset..
        /// </summary>
        internal static string error_invalidEra {
            get {
                return ResourceManager.GetString("error_invalidEra", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} units cannot merge with cities..
        /// </summary>
        internal static string Unit_CannotMerge {
            get {
                return ResourceManager.GetString("Unit_CannotMerge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} units cannot settle cities..
        /// </summary>
        internal static string Unit_CannotSettle {
            get {
                return ResourceManager.GetString("Unit_CannotSettle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} units cannot work..
        /// </summary>
        internal static string Unit_CannotWork {
            get {
                return ResourceManager.GetString("Unit_CannotWork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This unit cannot perform a merge operation because it is not in a City Square..
        /// </summary>
        internal static string Unit_MergeNoCity {
            get {
                return ResourceManager.GetString("Unit_MergeNoCity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no active unit to perform the requested action..
        /// </summary>
        internal static string Unit_Null {
            get {
                return ResourceManager.GetString("Unit_Null", resourceCulture);
            }
        }
    }
}
